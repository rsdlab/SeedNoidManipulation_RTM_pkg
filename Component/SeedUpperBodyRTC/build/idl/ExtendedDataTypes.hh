// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __ExtendedDataTypes_hh__
#define __ExtendedDataTypes_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_ExtendedDataTypes
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_ExtendedDataTypes
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_ExtendedDataTypes
#endif



#ifndef __BasicDataType_hh_EXTERNAL_GUARD__
#define __BasicDataType_hh_EXTERNAL_GUARD__
#include "BasicDataType.hh"
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE RTC

_CORBA_MODULE_BEG

  struct RGBColour {
    typedef _CORBA_ConstrType_Fix_Var<RGBColour> _var_type;

    
    ::CORBA::Double r;

    ::CORBA::Double g;

    ::CORBA::Double b;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef RGBColour::_var_type RGBColour_var;

  typedef RGBColour& RGBColour_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_RGBColour;

  struct Point2D {
    typedef _CORBA_ConstrType_Fix_Var<Point2D> _var_type;

    
    ::CORBA::Double x;

    ::CORBA::Double y;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Point2D::_var_type Point2D_var;

  typedef Point2D& Point2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Point2D;

  struct Vector2D {
    typedef _CORBA_ConstrType_Fix_Var<Vector2D> _var_type;

    
    ::CORBA::Double x;

    ::CORBA::Double y;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Vector2D::_var_type Vector2D_var;

  typedef Vector2D& Vector2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Vector2D;

  struct Pose2D {
    typedef _CORBA_ConstrType_Fix_Var<Pose2D> _var_type;

    
    Point2D position;

    ::CORBA::Double heading;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Pose2D::_var_type Pose2D_var;

  typedef Pose2D& Pose2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Pose2D;

  struct Velocity2D {
    typedef _CORBA_ConstrType_Fix_Var<Velocity2D> _var_type;

    
    ::CORBA::Double vx;

    ::CORBA::Double vy;

    ::CORBA::Double va;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Velocity2D::_var_type Velocity2D_var;

  typedef Velocity2D& Velocity2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Velocity2D;

  struct Acceleration2D {
    typedef _CORBA_ConstrType_Fix_Var<Acceleration2D> _var_type;

    
    ::CORBA::Double ax;

    ::CORBA::Double ay;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Acceleration2D::_var_type Acceleration2D_var;

  typedef Acceleration2D& Acceleration2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Acceleration2D;

  struct PoseVel2D {
    typedef _CORBA_ConstrType_Fix_Var<PoseVel2D> _var_type;

    
    Pose2D pose;

    Velocity2D velocities;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef PoseVel2D::_var_type PoseVel2D_var;

  typedef PoseVel2D& PoseVel2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_PoseVel2D;

  struct Size2D {
    typedef _CORBA_ConstrType_Fix_Var<Size2D> _var_type;

    
    ::CORBA::Double l;

    ::CORBA::Double w;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Size2D::_var_type Size2D_var;

  typedef Size2D& Size2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Size2D;

  struct Geometry2D {
    typedef _CORBA_ConstrType_Fix_Var<Geometry2D> _var_type;

    
    Pose2D pose;

    Size2D size;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Geometry2D::_var_type Geometry2D_var;

  typedef Geometry2D& Geometry2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Geometry2D;

  struct Covariance2D {
    typedef _CORBA_ConstrType_Fix_Var<Covariance2D> _var_type;

    
    ::CORBA::Double xx;

    ::CORBA::Double xy;

    ::CORBA::Double xt;

    ::CORBA::Double yy;

    ::CORBA::Double yt;

    ::CORBA::Double tt;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Covariance2D::_var_type Covariance2D_var;

  typedef Covariance2D& Covariance2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Covariance2D;

  struct PointCovariance2D {
    typedef _CORBA_ConstrType_Fix_Var<PointCovariance2D> _var_type;

    
    ::CORBA::Double xx;

    ::CORBA::Double xy;

    ::CORBA::Double yy;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef PointCovariance2D::_var_type PointCovariance2D_var;

  typedef PointCovariance2D& PointCovariance2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_PointCovariance2D;

  struct Carlike {
    typedef _CORBA_ConstrType_Fix_Var<Carlike> _var_type;

    
    ::CORBA::Double speed;

    ::CORBA::Double steeringAngle;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Carlike::_var_type Carlike_var;

  typedef Carlike& Carlike_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Carlike;

  struct SpeedHeading2D {
    typedef _CORBA_ConstrType_Fix_Var<SpeedHeading2D> _var_type;

    
    ::CORBA::Double speed;

    ::CORBA::Double heading;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef SpeedHeading2D::_var_type SpeedHeading2D_var;

  typedef SpeedHeading2D& SpeedHeading2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_SpeedHeading2D;

  struct Point3D {
    typedef _CORBA_ConstrType_Fix_Var<Point3D> _var_type;

    
    ::CORBA::Double x;

    ::CORBA::Double y;

    ::CORBA::Double z;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Point3D::_var_type Point3D_var;

  typedef Point3D& Point3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Point3D;

  struct Vector3D {
    typedef _CORBA_ConstrType_Fix_Var<Vector3D> _var_type;

    
    ::CORBA::Double x;

    ::CORBA::Double y;

    ::CORBA::Double z;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Vector3D::_var_type Vector3D_var;

  typedef Vector3D& Vector3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Vector3D;

  struct Orientation3D {
    typedef _CORBA_ConstrType_Fix_Var<Orientation3D> _var_type;

    
    ::CORBA::Double r;

    ::CORBA::Double p;

    ::CORBA::Double y;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Orientation3D::_var_type Orientation3D_var;

  typedef Orientation3D& Orientation3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Orientation3D;

  struct Pose3D {
    typedef _CORBA_ConstrType_Fix_Var<Pose3D> _var_type;

    
    Point3D position;

    Orientation3D orientation;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Pose3D::_var_type Pose3D_var;

  typedef Pose3D& Pose3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Pose3D;

  struct Velocity3D {
    typedef _CORBA_ConstrType_Fix_Var<Velocity3D> _var_type;

    
    ::CORBA::Double vx;

    ::CORBA::Double vy;

    ::CORBA::Double vz;

    ::CORBA::Double vr;

    ::CORBA::Double vp;

    ::CORBA::Double va;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Velocity3D::_var_type Velocity3D_var;

  typedef Velocity3D& Velocity3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Velocity3D;

  struct AngularVelocity3D {
    typedef _CORBA_ConstrType_Fix_Var<AngularVelocity3D> _var_type;

    
    ::CORBA::Double avx;

    ::CORBA::Double avy;

    ::CORBA::Double avz;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef AngularVelocity3D::_var_type AngularVelocity3D_var;

  typedef AngularVelocity3D& AngularVelocity3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_AngularVelocity3D;

  struct Acceleration3D {
    typedef _CORBA_ConstrType_Fix_Var<Acceleration3D> _var_type;

    
    ::CORBA::Double ax;

    ::CORBA::Double ay;

    ::CORBA::Double az;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Acceleration3D::_var_type Acceleration3D_var;

  typedef Acceleration3D& Acceleration3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Acceleration3D;

  struct AngularAcceleration3D {
    typedef _CORBA_ConstrType_Fix_Var<AngularAcceleration3D> _var_type;

    
    ::CORBA::Double aax;

    ::CORBA::Double aay;

    ::CORBA::Double aaz;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef AngularAcceleration3D::_var_type AngularAcceleration3D_var;

  typedef AngularAcceleration3D& AngularAcceleration3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_AngularAcceleration3D;

  struct PoseVel3D {
    typedef _CORBA_ConstrType_Fix_Var<PoseVel3D> _var_type;

    
    Pose3D pose;

    Velocity3D velocities;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef PoseVel3D::_var_type PoseVel3D_var;

  typedef PoseVel3D& PoseVel3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_PoseVel3D;

  struct Size3D {
    typedef _CORBA_ConstrType_Fix_Var<Size3D> _var_type;

    
    ::CORBA::Double l;

    ::CORBA::Double w;

    ::CORBA::Double h;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Size3D::_var_type Size3D_var;

  typedef Size3D& Size3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Size3D;

  struct Geometry3D {
    typedef _CORBA_ConstrType_Fix_Var<Geometry3D> _var_type;

    
    Pose3D pose;

    Size3D size;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Geometry3D::_var_type Geometry3D_var;

  typedef Geometry3D& Geometry3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Geometry3D;

  struct Covariance3D {
    typedef _CORBA_ConstrType_Fix_Var<Covariance3D> _var_type;

    
    ::CORBA::Double xx;

    ::CORBA::Double xy;

    ::CORBA::Double xz;

    ::CORBA::Double xr;

    ::CORBA::Double xp;

    ::CORBA::Double xa;

    ::CORBA::Double yy;

    ::CORBA::Double yz;

    ::CORBA::Double yr;

    ::CORBA::Double yp;

    ::CORBA::Double ya;

    ::CORBA::Double zz;

    ::CORBA::Double zr;

    ::CORBA::Double zp;

    ::CORBA::Double za;

    ::CORBA::Double rr;

    ::CORBA::Double rp;

    ::CORBA::Double ra;

    ::CORBA::Double pp;

    ::CORBA::Double pa;

    ::CORBA::Double aa;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Covariance3D::_var_type Covariance3D_var;

  typedef Covariance3D& Covariance3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Covariance3D;

  struct SpeedHeading3D {
    typedef _CORBA_ConstrType_Fix_Var<SpeedHeading3D> _var_type;

    
    ::CORBA::Double speed;

    Orientation3D direction;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef SpeedHeading3D::_var_type SpeedHeading3D_var;

  typedef SpeedHeading3D& SpeedHeading3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_SpeedHeading3D;

  struct OAP {
    typedef _CORBA_ConstrType_Fix_Var<OAP> _var_type;

    
    Vector3D orientation;

    Vector3D approach;

    Vector3D position;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef OAP::_var_type OAP_var;

  typedef OAP& OAP_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_OAP;

  struct TimedRGBColour {
    typedef _CORBA_ConstrType_Fix_Var<TimedRGBColour> _var_type;

    
    Time tm;

    RGBColour data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedRGBColour::_var_type TimedRGBColour_var;

  typedef TimedRGBColour& TimedRGBColour_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedRGBColour;

  struct TimedPoint2D {
    typedef _CORBA_ConstrType_Fix_Var<TimedPoint2D> _var_type;

    
    Time tm;

    Point2D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedPoint2D::_var_type TimedPoint2D_var;

  typedef TimedPoint2D& TimedPoint2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedPoint2D;

  struct TimedVector2D {
    typedef _CORBA_ConstrType_Fix_Var<TimedVector2D> _var_type;

    
    Time tm;

    Vector2D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedVector2D::_var_type TimedVector2D_var;

  typedef TimedVector2D& TimedVector2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedVector2D;

  struct TimedPose2D {
    typedef _CORBA_ConstrType_Fix_Var<TimedPose2D> _var_type;

    
    Time tm;

    Pose2D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedPose2D::_var_type TimedPose2D_var;

  typedef TimedPose2D& TimedPose2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedPose2D;

  struct TimedVelocity2D {
    typedef _CORBA_ConstrType_Fix_Var<TimedVelocity2D> _var_type;

    
    Time tm;

    Velocity2D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedVelocity2D::_var_type TimedVelocity2D_var;

  typedef TimedVelocity2D& TimedVelocity2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedVelocity2D;

  struct TimedAcceleration2D {
    typedef _CORBA_ConstrType_Fix_Var<TimedAcceleration2D> _var_type;

    
    Time tm;

    Acceleration2D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedAcceleration2D::_var_type TimedAcceleration2D_var;

  typedef TimedAcceleration2D& TimedAcceleration2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedAcceleration2D;

  struct TimedPoseVel2D {
    typedef _CORBA_ConstrType_Fix_Var<TimedPoseVel2D> _var_type;

    
    Time tm;

    PoseVel2D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedPoseVel2D::_var_type TimedPoseVel2D_var;

  typedef TimedPoseVel2D& TimedPoseVel2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedPoseVel2D;

  struct TimedSize2D {
    typedef _CORBA_ConstrType_Fix_Var<TimedSize2D> _var_type;

    
    Time tm;

    Size2D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedSize2D::_var_type TimedSize2D_var;

  typedef TimedSize2D& TimedSize2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedSize2D;

  struct TimedGeometry2D {
    typedef _CORBA_ConstrType_Fix_Var<TimedGeometry2D> _var_type;

    
    Time tm;

    Geometry2D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedGeometry2D::_var_type TimedGeometry2D_var;

  typedef TimedGeometry2D& TimedGeometry2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedGeometry2D;

  struct TimedCovariance2D {
    typedef _CORBA_ConstrType_Fix_Var<TimedCovariance2D> _var_type;

    
    Time tm;

    Covariance2D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedCovariance2D::_var_type TimedCovariance2D_var;

  typedef TimedCovariance2D& TimedCovariance2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedCovariance2D;

  struct TimedPointCovariance2D {
    typedef _CORBA_ConstrType_Fix_Var<TimedPointCovariance2D> _var_type;

    
    Time tm;

    PointCovariance2D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedPointCovariance2D::_var_type TimedPointCovariance2D_var;

  typedef TimedPointCovariance2D& TimedPointCovariance2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedPointCovariance2D;

  struct TimedCarlike {
    typedef _CORBA_ConstrType_Fix_Var<TimedCarlike> _var_type;

    
    Time tm;

    Carlike data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedCarlike::_var_type TimedCarlike_var;

  typedef TimedCarlike& TimedCarlike_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedCarlike;

  struct TimedSpeedHeading2D {
    typedef _CORBA_ConstrType_Fix_Var<TimedSpeedHeading2D> _var_type;

    
    Time tm;

    SpeedHeading2D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedSpeedHeading2D::_var_type TimedSpeedHeading2D_var;

  typedef TimedSpeedHeading2D& TimedSpeedHeading2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedSpeedHeading2D;

  struct TimedPoint3D {
    typedef _CORBA_ConstrType_Fix_Var<TimedPoint3D> _var_type;

    
    Time tm;

    Point3D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedPoint3D::_var_type TimedPoint3D_var;

  typedef TimedPoint3D& TimedPoint3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedPoint3D;

  struct TimedVector3D {
    typedef _CORBA_ConstrType_Fix_Var<TimedVector3D> _var_type;

    
    Time tm;

    Vector3D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedVector3D::_var_type TimedVector3D_var;

  typedef TimedVector3D& TimedVector3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedVector3D;

  struct TimedOrientation3D {
    typedef _CORBA_ConstrType_Fix_Var<TimedOrientation3D> _var_type;

    
    Time tm;

    Orientation3D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedOrientation3D::_var_type TimedOrientation3D_var;

  typedef TimedOrientation3D& TimedOrientation3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedOrientation3D;

  struct TimedPose3D {
    typedef _CORBA_ConstrType_Fix_Var<TimedPose3D> _var_type;

    
    Time tm;

    Pose3D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedPose3D::_var_type TimedPose3D_var;

  typedef TimedPose3D& TimedPose3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedPose3D;

  struct TimedVelocity3D {
    typedef _CORBA_ConstrType_Fix_Var<TimedVelocity3D> _var_type;

    
    Time tm;

    Velocity3D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedVelocity3D::_var_type TimedVelocity3D_var;

  typedef TimedVelocity3D& TimedVelocity3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedVelocity3D;

  struct TimedAngularVelocity3D {
    typedef _CORBA_ConstrType_Fix_Var<TimedAngularVelocity3D> _var_type;

    
    Time tm;

    AngularVelocity3D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedAngularVelocity3D::_var_type TimedAngularVelocity3D_var;

  typedef TimedAngularVelocity3D& TimedAngularVelocity3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedAngularVelocity3D;

  struct TimedAcceleration3D {
    typedef _CORBA_ConstrType_Fix_Var<TimedAcceleration3D> _var_type;

    
    Time tm;

    Acceleration3D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedAcceleration3D::_var_type TimedAcceleration3D_var;

  typedef TimedAcceleration3D& TimedAcceleration3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedAcceleration3D;

  struct TimedAngularAcceleration3D {
    typedef _CORBA_ConstrType_Fix_Var<TimedAngularAcceleration3D> _var_type;

    
    Time tm;

    AngularAcceleration3D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedAngularAcceleration3D::_var_type TimedAngularAcceleration3D_var;

  typedef TimedAngularAcceleration3D& TimedAngularAcceleration3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedAngularAcceleration3D;

  struct TimedPoseVel3D {
    typedef _CORBA_ConstrType_Fix_Var<TimedPoseVel3D> _var_type;

    
    Time tm;

    PoseVel3D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedPoseVel3D::_var_type TimedPoseVel3D_var;

  typedef TimedPoseVel3D& TimedPoseVel3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedPoseVel3D;

  struct TimedSize3D {
    typedef _CORBA_ConstrType_Fix_Var<TimedSize3D> _var_type;

    
    Time tm;

    Size3D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedSize3D::_var_type TimedSize3D_var;

  typedef TimedSize3D& TimedSize3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedSize3D;

  struct TimedGeometry3D {
    typedef _CORBA_ConstrType_Fix_Var<TimedGeometry3D> _var_type;

    
    Time tm;

    Geometry3D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedGeometry3D::_var_type TimedGeometry3D_var;

  typedef TimedGeometry3D& TimedGeometry3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedGeometry3D;

  struct TimedCovariance3D {
    typedef _CORBA_ConstrType_Fix_Var<TimedCovariance3D> _var_type;

    
    Time tm;

    Covariance3D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedCovariance3D::_var_type TimedCovariance3D_var;

  typedef TimedCovariance3D& TimedCovariance3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedCovariance3D;

  struct TimedSpeedHeading3D {
    typedef _CORBA_ConstrType_Fix_Var<TimedSpeedHeading3D> _var_type;

    
    Time tm;

    SpeedHeading3D data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedSpeedHeading3D::_var_type TimedSpeedHeading3D_var;

  typedef TimedSpeedHeading3D& TimedSpeedHeading3D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedSpeedHeading3D;

  struct TimedOAP {
    typedef _CORBA_ConstrType_Fix_Var<TimedOAP> _var_type;

    
    Time tm;

    OAP data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedOAP::_var_type TimedOAP_var;

  typedef TimedOAP& TimedOAP_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedOAP;

  struct Quaternion {
    typedef _CORBA_ConstrType_Fix_Var<Quaternion> _var_type;

    
    ::CORBA::Double x;

    ::CORBA::Double y;

    ::CORBA::Double z;

    ::CORBA::Double w;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Quaternion::_var_type Quaternion_var;

  typedef Quaternion& Quaternion_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Quaternion;

  struct TimedQuaternion {
    typedef _CORBA_ConstrType_Fix_Var<TimedQuaternion> _var_type;

    
    Time tm;

    Quaternion data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedQuaternion::_var_type TimedQuaternion_var;

  typedef TimedQuaternion& TimedQuaternion_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedQuaternion;

_CORBA_MODULE_END



_CORBA_MODULE POA_RTC
_CORBA_MODULE_BEG

_CORBA_MODULE_END



_CORBA_MODULE OBV_RTC
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

extern void operator<<=(::CORBA::Any& _a, const RTC::RGBColour& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::RGBColour* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::RGBColour*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::RGBColour*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Point2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Point2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Point2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Point2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Vector2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Vector2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Vector2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Vector2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Pose2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Pose2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Pose2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Pose2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Velocity2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Velocity2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Velocity2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Velocity2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Acceleration2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Acceleration2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Acceleration2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Acceleration2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::PoseVel2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::PoseVel2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::PoseVel2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::PoseVel2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Size2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Size2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Size2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Size2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Geometry2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Geometry2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Geometry2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Geometry2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Covariance2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Covariance2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Covariance2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Covariance2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::PointCovariance2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::PointCovariance2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::PointCovariance2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::PointCovariance2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Carlike& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Carlike* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Carlike*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Carlike*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::SpeedHeading2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::SpeedHeading2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::SpeedHeading2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::SpeedHeading2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Point3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Point3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Point3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Point3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Vector3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Vector3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Vector3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Vector3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Orientation3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Orientation3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Orientation3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Orientation3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Pose3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Pose3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Pose3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Pose3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Velocity3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Velocity3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Velocity3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Velocity3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::AngularVelocity3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::AngularVelocity3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::AngularVelocity3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::AngularVelocity3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Acceleration3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Acceleration3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Acceleration3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Acceleration3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::AngularAcceleration3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::AngularAcceleration3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::AngularAcceleration3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::AngularAcceleration3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::PoseVel3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::PoseVel3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::PoseVel3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::PoseVel3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Size3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Size3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Size3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Size3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Geometry3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Geometry3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Geometry3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Geometry3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Covariance3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Covariance3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Covariance3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Covariance3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::SpeedHeading3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::SpeedHeading3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::SpeedHeading3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::SpeedHeading3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::OAP& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::OAP* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::OAP*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::OAP*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedRGBColour& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedRGBColour* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedRGBColour*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedRGBColour*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedPoint2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedPoint2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedPoint2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedPoint2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedVector2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedVector2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedVector2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedVector2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedPose2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedPose2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedPose2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedPose2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedVelocity2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedVelocity2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedVelocity2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedVelocity2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedAcceleration2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedAcceleration2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedAcceleration2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedAcceleration2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedPoseVel2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedPoseVel2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedPoseVel2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedPoseVel2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedSize2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedSize2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedSize2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedSize2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedGeometry2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedGeometry2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedGeometry2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedGeometry2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedCovariance2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedCovariance2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedCovariance2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedCovariance2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedPointCovariance2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedPointCovariance2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedPointCovariance2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedPointCovariance2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedCarlike& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedCarlike* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedCarlike*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedCarlike*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedSpeedHeading2D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedSpeedHeading2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedSpeedHeading2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedSpeedHeading2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedPoint3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedPoint3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedPoint3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedPoint3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedVector3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedVector3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedVector3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedVector3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedOrientation3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedOrientation3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedOrientation3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedOrientation3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedPose3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedPose3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedPose3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedPose3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedVelocity3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedVelocity3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedVelocity3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedVelocity3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedAngularVelocity3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedAngularVelocity3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedAngularVelocity3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedAngularVelocity3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedAcceleration3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedAcceleration3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedAcceleration3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedAcceleration3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedAngularAcceleration3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedAngularAcceleration3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedAngularAcceleration3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedAngularAcceleration3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedPoseVel3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedPoseVel3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedPoseVel3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedPoseVel3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedSize3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedSize3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedSize3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedSize3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedGeometry3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedGeometry3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedGeometry3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedGeometry3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedCovariance3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedCovariance3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedCovariance3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedCovariance3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedSpeedHeading3D& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedSpeedHeading3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedSpeedHeading3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedSpeedHeading3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedOAP& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedOAP* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedOAP*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedOAP*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Quaternion& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Quaternion* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Quaternion*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Quaternion*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedQuaternion& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedQuaternion* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedQuaternion*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedQuaternion*& _sp);





#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_ExtendedDataTypes
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_ExtendedDataTypes
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_ExtendedDataTypes
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_ExtendedDataTypes
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_ExtendedDataTypes
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_ExtendedDataTypes
#endif

#endif  // __ExtendedDataTypes_hh__

