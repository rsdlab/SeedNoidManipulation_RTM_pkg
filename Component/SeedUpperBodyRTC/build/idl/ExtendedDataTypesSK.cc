// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "ExtendedDataTypes.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



void
RTC::RGBColour::operator>>= (cdrStream &_n) const
{
  r >>= _n;
  g >>= _n;
  b >>= _n;

}

void
RTC::RGBColour::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)r <<= _n;
  (::CORBA::Double&)g <<= _n;
  (::CORBA::Double&)b <<= _n;

}

void
RTC::Point2D::operator>>= (cdrStream &_n) const
{
  x >>= _n;
  y >>= _n;

}

void
RTC::Point2D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;

}

void
RTC::Vector2D::operator>>= (cdrStream &_n) const
{
  x >>= _n;
  y >>= _n;

}

void
RTC::Vector2D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;

}

void
RTC::Pose2D::operator>>= (cdrStream &_n) const
{
  (const Point2D&) position >>= _n;
  heading >>= _n;

}

void
RTC::Pose2D::operator<<= (cdrStream &_n)
{
  (Point2D&)position <<= _n;
  (::CORBA::Double&)heading <<= _n;

}

void
RTC::Velocity2D::operator>>= (cdrStream &_n) const
{
  vx >>= _n;
  vy >>= _n;
  va >>= _n;

}

void
RTC::Velocity2D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)vx <<= _n;
  (::CORBA::Double&)vy <<= _n;
  (::CORBA::Double&)va <<= _n;

}

void
RTC::Acceleration2D::operator>>= (cdrStream &_n) const
{
  ax >>= _n;
  ay >>= _n;

}

void
RTC::Acceleration2D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)ax <<= _n;
  (::CORBA::Double&)ay <<= _n;

}

void
RTC::PoseVel2D::operator>>= (cdrStream &_n) const
{
  (const Pose2D&) pose >>= _n;
  (const Velocity2D&) velocities >>= _n;

}

void
RTC::PoseVel2D::operator<<= (cdrStream &_n)
{
  (Pose2D&)pose <<= _n;
  (Velocity2D&)velocities <<= _n;

}

void
RTC::Size2D::operator>>= (cdrStream &_n) const
{
  l >>= _n;
  w >>= _n;

}

void
RTC::Size2D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)l <<= _n;
  (::CORBA::Double&)w <<= _n;

}

void
RTC::Geometry2D::operator>>= (cdrStream &_n) const
{
  (const Pose2D&) pose >>= _n;
  (const Size2D&) size >>= _n;

}

void
RTC::Geometry2D::operator<<= (cdrStream &_n)
{
  (Pose2D&)pose <<= _n;
  (Size2D&)size <<= _n;

}

void
RTC::Covariance2D::operator>>= (cdrStream &_n) const
{
  xx >>= _n;
  xy >>= _n;
  xt >>= _n;
  yy >>= _n;
  yt >>= _n;
  tt >>= _n;

}

void
RTC::Covariance2D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)xx <<= _n;
  (::CORBA::Double&)xy <<= _n;
  (::CORBA::Double&)xt <<= _n;
  (::CORBA::Double&)yy <<= _n;
  (::CORBA::Double&)yt <<= _n;
  (::CORBA::Double&)tt <<= _n;

}

void
RTC::PointCovariance2D::operator>>= (cdrStream &_n) const
{
  xx >>= _n;
  xy >>= _n;
  yy >>= _n;

}

void
RTC::PointCovariance2D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)xx <<= _n;
  (::CORBA::Double&)xy <<= _n;
  (::CORBA::Double&)yy <<= _n;

}

void
RTC::Carlike::operator>>= (cdrStream &_n) const
{
  speed >>= _n;
  steeringAngle >>= _n;

}

void
RTC::Carlike::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)speed <<= _n;
  (::CORBA::Double&)steeringAngle <<= _n;

}

void
RTC::SpeedHeading2D::operator>>= (cdrStream &_n) const
{
  speed >>= _n;
  heading >>= _n;

}

void
RTC::SpeedHeading2D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)speed <<= _n;
  (::CORBA::Double&)heading <<= _n;

}

void
RTC::Point3D::operator>>= (cdrStream &_n) const
{
  x >>= _n;
  y >>= _n;
  z >>= _n;

}

void
RTC::Point3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;
  (::CORBA::Double&)z <<= _n;

}

void
RTC::Vector3D::operator>>= (cdrStream &_n) const
{
  x >>= _n;
  y >>= _n;
  z >>= _n;

}

void
RTC::Vector3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;
  (::CORBA::Double&)z <<= _n;

}

void
RTC::Orientation3D::operator>>= (cdrStream &_n) const
{
  r >>= _n;
  p >>= _n;
  y >>= _n;

}

void
RTC::Orientation3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)r <<= _n;
  (::CORBA::Double&)p <<= _n;
  (::CORBA::Double&)y <<= _n;

}

void
RTC::Pose3D::operator>>= (cdrStream &_n) const
{
  (const Point3D&) position >>= _n;
  (const Orientation3D&) orientation >>= _n;

}

void
RTC::Pose3D::operator<<= (cdrStream &_n)
{
  (Point3D&)position <<= _n;
  (Orientation3D&)orientation <<= _n;

}

void
RTC::Velocity3D::operator>>= (cdrStream &_n) const
{
  vx >>= _n;
  vy >>= _n;
  vz >>= _n;
  vr >>= _n;
  vp >>= _n;
  va >>= _n;

}

void
RTC::Velocity3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)vx <<= _n;
  (::CORBA::Double&)vy <<= _n;
  (::CORBA::Double&)vz <<= _n;
  (::CORBA::Double&)vr <<= _n;
  (::CORBA::Double&)vp <<= _n;
  (::CORBA::Double&)va <<= _n;

}

void
RTC::AngularVelocity3D::operator>>= (cdrStream &_n) const
{
  avx >>= _n;
  avy >>= _n;
  avz >>= _n;

}

void
RTC::AngularVelocity3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)avx <<= _n;
  (::CORBA::Double&)avy <<= _n;
  (::CORBA::Double&)avz <<= _n;

}

void
RTC::Acceleration3D::operator>>= (cdrStream &_n) const
{
  ax >>= _n;
  ay >>= _n;
  az >>= _n;

}

void
RTC::Acceleration3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)ax <<= _n;
  (::CORBA::Double&)ay <<= _n;
  (::CORBA::Double&)az <<= _n;

}

void
RTC::AngularAcceleration3D::operator>>= (cdrStream &_n) const
{
  aax >>= _n;
  aay >>= _n;
  aaz >>= _n;

}

void
RTC::AngularAcceleration3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)aax <<= _n;
  (::CORBA::Double&)aay <<= _n;
  (::CORBA::Double&)aaz <<= _n;

}

void
RTC::PoseVel3D::operator>>= (cdrStream &_n) const
{
  (const Pose3D&) pose >>= _n;
  (const Velocity3D&) velocities >>= _n;

}

void
RTC::PoseVel3D::operator<<= (cdrStream &_n)
{
  (Pose3D&)pose <<= _n;
  (Velocity3D&)velocities <<= _n;

}

void
RTC::Size3D::operator>>= (cdrStream &_n) const
{
  l >>= _n;
  w >>= _n;
  h >>= _n;

}

void
RTC::Size3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)l <<= _n;
  (::CORBA::Double&)w <<= _n;
  (::CORBA::Double&)h <<= _n;

}

void
RTC::Geometry3D::operator>>= (cdrStream &_n) const
{
  (const Pose3D&) pose >>= _n;
  (const Size3D&) size >>= _n;

}

void
RTC::Geometry3D::operator<<= (cdrStream &_n)
{
  (Pose3D&)pose <<= _n;
  (Size3D&)size <<= _n;

}

void
RTC::Covariance3D::operator>>= (cdrStream &_n) const
{
  xx >>= _n;
  xy >>= _n;
  xz >>= _n;
  xr >>= _n;
  xp >>= _n;
  xa >>= _n;
  yy >>= _n;
  yz >>= _n;
  yr >>= _n;
  yp >>= _n;
  ya >>= _n;
  zz >>= _n;
  zr >>= _n;
  zp >>= _n;
  za >>= _n;
  rr >>= _n;
  rp >>= _n;
  ra >>= _n;
  pp >>= _n;
  pa >>= _n;
  aa >>= _n;

}

void
RTC::Covariance3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)xx <<= _n;
  (::CORBA::Double&)xy <<= _n;
  (::CORBA::Double&)xz <<= _n;
  (::CORBA::Double&)xr <<= _n;
  (::CORBA::Double&)xp <<= _n;
  (::CORBA::Double&)xa <<= _n;
  (::CORBA::Double&)yy <<= _n;
  (::CORBA::Double&)yz <<= _n;
  (::CORBA::Double&)yr <<= _n;
  (::CORBA::Double&)yp <<= _n;
  (::CORBA::Double&)ya <<= _n;
  (::CORBA::Double&)zz <<= _n;
  (::CORBA::Double&)zr <<= _n;
  (::CORBA::Double&)zp <<= _n;
  (::CORBA::Double&)za <<= _n;
  (::CORBA::Double&)rr <<= _n;
  (::CORBA::Double&)rp <<= _n;
  (::CORBA::Double&)ra <<= _n;
  (::CORBA::Double&)pp <<= _n;
  (::CORBA::Double&)pa <<= _n;
  (::CORBA::Double&)aa <<= _n;

}

void
RTC::SpeedHeading3D::operator>>= (cdrStream &_n) const
{
  speed >>= _n;
  (const Orientation3D&) direction >>= _n;

}

void
RTC::SpeedHeading3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)speed <<= _n;
  (Orientation3D&)direction <<= _n;

}

void
RTC::OAP::operator>>= (cdrStream &_n) const
{
  (const Vector3D&) orientation >>= _n;
  (const Vector3D&) approach >>= _n;
  (const Vector3D&) position >>= _n;

}

void
RTC::OAP::operator<<= (cdrStream &_n)
{
  (Vector3D&)orientation <<= _n;
  (Vector3D&)approach <<= _n;
  (Vector3D&)position <<= _n;

}

void
RTC::TimedRGBColour::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const RGBColour&) data >>= _n;

}

void
RTC::TimedRGBColour::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (RGBColour&)data <<= _n;

}

void
RTC::TimedPoint2D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Point2D&) data >>= _n;

}

void
RTC::TimedPoint2D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Point2D&)data <<= _n;

}

void
RTC::TimedVector2D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Vector2D&) data >>= _n;

}

void
RTC::TimedVector2D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Vector2D&)data <<= _n;

}

void
RTC::TimedPose2D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Pose2D&) data >>= _n;

}

void
RTC::TimedPose2D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Pose2D&)data <<= _n;

}

void
RTC::TimedVelocity2D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Velocity2D&) data >>= _n;

}

void
RTC::TimedVelocity2D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Velocity2D&)data <<= _n;

}

void
RTC::TimedAcceleration2D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Acceleration2D&) data >>= _n;

}

void
RTC::TimedAcceleration2D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Acceleration2D&)data <<= _n;

}

void
RTC::TimedPoseVel2D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const PoseVel2D&) data >>= _n;

}

void
RTC::TimedPoseVel2D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (PoseVel2D&)data <<= _n;

}

void
RTC::TimedSize2D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Size2D&) data >>= _n;

}

void
RTC::TimedSize2D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Size2D&)data <<= _n;

}

void
RTC::TimedGeometry2D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Geometry2D&) data >>= _n;

}

void
RTC::TimedGeometry2D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Geometry2D&)data <<= _n;

}

void
RTC::TimedCovariance2D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Covariance2D&) data >>= _n;

}

void
RTC::TimedCovariance2D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Covariance2D&)data <<= _n;

}

void
RTC::TimedPointCovariance2D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const PointCovariance2D&) data >>= _n;

}

void
RTC::TimedPointCovariance2D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (PointCovariance2D&)data <<= _n;

}

void
RTC::TimedCarlike::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Carlike&) data >>= _n;

}

void
RTC::TimedCarlike::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Carlike&)data <<= _n;

}

void
RTC::TimedSpeedHeading2D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const SpeedHeading2D&) data >>= _n;

}

void
RTC::TimedSpeedHeading2D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (SpeedHeading2D&)data <<= _n;

}

void
RTC::TimedPoint3D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Point3D&) data >>= _n;

}

void
RTC::TimedPoint3D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Point3D&)data <<= _n;

}

void
RTC::TimedVector3D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Vector3D&) data >>= _n;

}

void
RTC::TimedVector3D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Vector3D&)data <<= _n;

}

void
RTC::TimedOrientation3D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Orientation3D&) data >>= _n;

}

void
RTC::TimedOrientation3D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Orientation3D&)data <<= _n;

}

void
RTC::TimedPose3D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Pose3D&) data >>= _n;

}

void
RTC::TimedPose3D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Pose3D&)data <<= _n;

}

void
RTC::TimedVelocity3D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Velocity3D&) data >>= _n;

}

void
RTC::TimedVelocity3D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Velocity3D&)data <<= _n;

}

void
RTC::TimedAngularVelocity3D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const AngularVelocity3D&) data >>= _n;

}

void
RTC::TimedAngularVelocity3D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (AngularVelocity3D&)data <<= _n;

}

void
RTC::TimedAcceleration3D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Acceleration3D&) data >>= _n;

}

void
RTC::TimedAcceleration3D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Acceleration3D&)data <<= _n;

}

void
RTC::TimedAngularAcceleration3D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const AngularAcceleration3D&) data >>= _n;

}

void
RTC::TimedAngularAcceleration3D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (AngularAcceleration3D&)data <<= _n;

}

void
RTC::TimedPoseVel3D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const PoseVel3D&) data >>= _n;

}

void
RTC::TimedPoseVel3D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (PoseVel3D&)data <<= _n;

}

void
RTC::TimedSize3D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Size3D&) data >>= _n;

}

void
RTC::TimedSize3D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Size3D&)data <<= _n;

}

void
RTC::TimedGeometry3D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Geometry3D&) data >>= _n;

}

void
RTC::TimedGeometry3D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Geometry3D&)data <<= _n;

}

void
RTC::TimedCovariance3D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Covariance3D&) data >>= _n;

}

void
RTC::TimedCovariance3D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Covariance3D&)data <<= _n;

}

void
RTC::TimedSpeedHeading3D::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const SpeedHeading3D&) data >>= _n;

}

void
RTC::TimedSpeedHeading3D::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (SpeedHeading3D&)data <<= _n;

}

void
RTC::TimedOAP::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const OAP&) data >>= _n;

}

void
RTC::TimedOAP::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (OAP&)data <<= _n;

}

void
RTC::Quaternion::operator>>= (cdrStream &_n) const
{
  x >>= _n;
  y >>= _n;
  z >>= _n;
  w >>= _n;

}

void
RTC::Quaternion::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;
  (::CORBA::Double&)z <<= _n;
  (::CORBA::Double&)w <<= _n;

}

void
RTC::TimedQuaternion::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const Quaternion&) data >>= _n;

}

void
RTC::TimedQuaternion::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (Quaternion&)data <<= _n;

}

