// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "MotionPlanning.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



_init_in_def_( const ::CORBA::Long Planning::OK = 0; )

_init_in_def_( const ::CORBA::Long Planning::NG = -1; )

void
Planning::ManipPos::operator>>= (cdrStream &_n) const
{
  
#ifndef OMNI_MIXED_ENDIAN_DOUBLE
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)(rotation),72,omni::ALIGN_8);
  }
  else 
#endif
  {
    _n.declareArrayLength(omni::ALIGN_8, 72);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 9; _0i0++){
      rotation[_0i0] >>= _n;
    }
  }
  
#ifndef OMNI_MIXED_ENDIAN_DOUBLE
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)(position),24,omni::ALIGN_8);
  }
  else 
#endif
  {
    _n.declareArrayLength(omni::ALIGN_8, 24);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 3; _0i0++){
      position[_0i0] >>= _n;
    }
  }

}

void
Planning::ManipPos::operator<<= (cdrStream &_n)
{
  _n.unmarshalArrayDouble((_CORBA_Double*)(rotation), 9);
  _n.unmarshalArrayDouble((_CORBA_Double*)(position), 3);

}

Planning::MotionPlanningInterface_ptr Planning::MotionPlanningInterface_Helper::_nil() {
  return ::Planning::MotionPlanningInterface::_nil();
}

::CORBA::Boolean Planning::MotionPlanningInterface_Helper::is_nil(::Planning::MotionPlanningInterface_ptr p) {
  return ::CORBA::is_nil(p);

}

void Planning::MotionPlanningInterface_Helper::release(::Planning::MotionPlanningInterface_ptr p) {
  ::CORBA::release(p);
}

void Planning::MotionPlanningInterface_Helper::marshalObjRef(::Planning::MotionPlanningInterface_ptr obj, cdrStream& s) {
  ::Planning::MotionPlanningInterface::_marshalObjRef(obj, s);
}

Planning::MotionPlanningInterface_ptr Planning::MotionPlanningInterface_Helper::unmarshalObjRef(cdrStream& s) {
  return ::Planning::MotionPlanningInterface::_unmarshalObjRef(s);
}

void Planning::MotionPlanningInterface_Helper::duplicate(::Planning::MotionPlanningInterface_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

Planning::MotionPlanningInterface_ptr
Planning::MotionPlanningInterface::_duplicate(::Planning::MotionPlanningInterface_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

Planning::MotionPlanningInterface_ptr
Planning::MotionPlanningInterface::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


Planning::MotionPlanningInterface_ptr
Planning::MotionPlanningInterface::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

Planning::MotionPlanningInterface_ptr
Planning::MotionPlanningInterface::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_MotionPlanningInterface _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_MotionPlanningInterface* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_MotionPlanningInterface;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* Planning::MotionPlanningInterface::_PD_repoId = "IDL:Planning/MotionPlanningInterface:1.0";


Planning::_objref_MotionPlanningInterface::~_objref_MotionPlanningInterface() {
  
}


Planning::_objref_MotionPlanningInterface::_objref_MotionPlanningInterface(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::Planning::MotionPlanningInterface::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
Planning::_objref_MotionPlanningInterface::_ptrToObjRef(const char* id)
{
  if( id == ::Planning::MotionPlanningInterface::_PD_repoId )
    return (::Planning::MotionPlanningInterface_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::Planning::MotionPlanningInterface::_PD_repoId) )
    return (::Planning::MotionPlanningInterface_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _clong_i_cPlanning_mtheta
class _0RL_cd_2e04eb9ae7cb706f_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_2e04eb9ae7cb706f_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  Planning::theta_var arg_0_;
  const Planning::theta* arg_0;
  ::CORBA::Long result;
};

void _0RL_cd_2e04eb9ae7cb706f_00000000::marshalArguments(cdrStream& _n)
{
  (const Planning::theta&) *arg_0 >>= _n;

}

void _0RL_cd_2e04eb9ae7cb706f_00000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new Planning::theta;
  (Planning::theta&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

void _0RL_cd_2e04eb9ae7cb706f_00000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_2e04eb9ae7cb706f_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;

}

const char* const _0RL_cd_2e04eb9ae7cb706f_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_2e04eb9ae7cb706f_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_2e04eb9ae7cb706f_00000000* tcd = (_0RL_cd_2e04eb9ae7cb706f_00000000*)cd;
  Planning::_impl_MotionPlanningInterface* impl = (Planning::_impl_MotionPlanningInterface*) svnt->_ptrToInterface(Planning::MotionPlanningInterface::_PD_repoId);
  tcd->result = impl->MotionGenerate_Joint(*tcd->arg_0);


}

::CORBA::Long Planning::_objref_MotionPlanningInterface::MotionGenerate_Joint(const ::Planning::theta& q_goal)
{
  _0RL_cd_2e04eb9ae7cb706f_00000000 _call_desc(_0RL_lcfn_2e04eb9ae7cb706f_10000000, "MotionGenerate_Joint", 21);
  _call_desc.arg_0 = &(::Planning::theta&) q_goal;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_i_cPlanning_mManipPos
class _0RL_cd_2e04eb9ae7cb706f_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_2e04eb9ae7cb706f_20000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  Planning::ManipPos arg_0_;
  const Planning::ManipPos* arg_0;
  ::CORBA::Long result;
};

void _0RL_cd_2e04eb9ae7cb706f_20000000::marshalArguments(cdrStream& _n)
{
  (const Planning::ManipPos&) *arg_0 >>= _n;

}

void _0RL_cd_2e04eb9ae7cb706f_20000000::unmarshalArguments(cdrStream& _n)
{
  (Planning::ManipPos&)arg_0_ <<= _n;
  arg_0 = &arg_0_;

}

void _0RL_cd_2e04eb9ae7cb706f_20000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_2e04eb9ae7cb706f_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;

}

const char* const _0RL_cd_2e04eb9ae7cb706f_20000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_2e04eb9ae7cb706f_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_2e04eb9ae7cb706f_20000000* tcd = (_0RL_cd_2e04eb9ae7cb706f_20000000*)cd;
  Planning::_impl_MotionPlanningInterface* impl = (Planning::_impl_MotionPlanningInterface*) svnt->_ptrToInterface(Planning::MotionPlanningInterface::_PD_repoId);
  tcd->result = impl->MotionGenerate(*tcd->arg_0);


}

::CORBA::Long Planning::_objref_MotionPlanningInterface::MotionGenerate(const ::Planning::ManipPos& EEfPos)
{
  _0RL_cd_2e04eb9ae7cb706f_20000000 _call_desc(_0RL_lcfn_2e04eb9ae7cb706f_30000000, "MotionGenerate", 15);
  _call_desc.arg_0 = &(::Planning::ManipPos&) EEfPos;

  _invoke(_call_desc);
  return _call_desc.result;


}
Planning::_pof_MotionPlanningInterface::~_pof_MotionPlanningInterface() {}


omniObjRef*
Planning::_pof_MotionPlanningInterface::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::Planning::_objref_MotionPlanningInterface(ior, id);
}


::CORBA::Boolean
Planning::_pof_MotionPlanningInterface::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::Planning::MotionPlanningInterface::_PD_repoId) )
    return 1;
  
  return 0;
}

const Planning::_pof_MotionPlanningInterface _the_pof_Planning_mMotionPlanningInterface;

Planning::_impl_MotionPlanningInterface::~_impl_MotionPlanningInterface() {}


::CORBA::Boolean
Planning::_impl_MotionPlanningInterface::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "MotionGenerate_Joint") ) {

    _0RL_cd_2e04eb9ae7cb706f_00000000 _call_desc(_0RL_lcfn_2e04eb9ae7cb706f_10000000, "MotionGenerate_Joint", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "MotionGenerate") ) {

    _0RL_cd_2e04eb9ae7cb706f_20000000 _call_desc(_0RL_lcfn_2e04eb9ae7cb706f_30000000, "MotionGenerate", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
Planning::_impl_MotionPlanningInterface::_ptrToInterface(const char* id)
{
  if( id == ::Planning::MotionPlanningInterface::_PD_repoId )
    return (::Planning::_impl_MotionPlanningInterface*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::Planning::MotionPlanningInterface::_PD_repoId) )
    return (::Planning::_impl_MotionPlanningInterface*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
Planning::_impl_MotionPlanningInterface::_mostDerivedRepoId()
{
  return ::Planning::MotionPlanningInterface::_PD_repoId;
}

POA_Planning::MotionPlanningInterface::~MotionPlanningInterface() {}

