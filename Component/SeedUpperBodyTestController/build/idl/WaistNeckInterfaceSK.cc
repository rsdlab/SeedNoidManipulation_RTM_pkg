// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "WaistNeckInterface.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



void
WaistNeck::RETURN_ID::operator>>= (cdrStream &_n) const
{
  id >>= _n;
  _n.marshalString(comment,0);

}

void
WaistNeck::RETURN_ID::operator<<= (cdrStream &_n)
{
  (::CORBA::Long&)id <<= _n;
  comment = _n.unmarshalString(0);

}

void
WaistNeck::LimitValue::operator>>= (cdrStream &_n) const
{
  upper >>= _n;
  lower >>= _n;

}

void
WaistNeck::LimitValue::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)upper <<= _n;
  (::CORBA::Double&)lower <<= _n;

}

void
WaistNeck::ManipInfo::operator>>= (cdrStream &_n) const
{
  _n.marshalString(manufactur,0);
  _n.marshalString(type,0);
  axisNum >>= _n;
  cmdCycle >>= _n;

}

void
WaistNeck::ManipInfo::operator<<= (cdrStream &_n)
{
  manufactur = _n.unmarshalString(0);
  type = _n.unmarshalString(0);
  (ULONG&)axisNum <<= _n;
  (ULONG&)cmdCycle <<= _n;

}

_init_in_def_( const ::CORBA::ULong WaistNeck::CONST_BINARY_00000001 = 1U; )

_init_in_def_( const ::CORBA::ULong WaistNeck::CONST_BINARY_00000010 = 2U; )

_init_in_def_( const ::CORBA::ULong WaistNeck::CONST_BINARY_00000100 = 4U; )

_init_in_def_( const ::CORBA::ULong WaistNeck::CONST_BINARY_00001000 = 8U; )

_init_in_def_( const ::CORBA::Long WaistNeck::OK = 0; )

_init_in_def_( const ::CORBA::Long WaistNeck::NG = -1; )

_init_in_def_( const ::CORBA::Long WaistNeck::STATUS_ERR = -2; )

_init_in_def_( const ::CORBA::Long WaistNeck::VALUE_ERR = -3; )

_init_in_def_( const ::CORBA::Long WaistNeck::NOT_SV_ON_ERR = -4; )

_init_in_def_( const ::CORBA::Long WaistNeck::FULL_MOTION_QUEUE_ERR = -5; )

_init_in_def_( const ::CORBA::Long WaistNeck::NOT_IMPLEMENTED = -6; )

WaistNeck::NeckInterface_ptr WaistNeck::NeckInterface_Helper::_nil() {
  return ::WaistNeck::NeckInterface::_nil();
}

::CORBA::Boolean WaistNeck::NeckInterface_Helper::is_nil(::WaistNeck::NeckInterface_ptr p) {
  return ::CORBA::is_nil(p);

}

void WaistNeck::NeckInterface_Helper::release(::WaistNeck::NeckInterface_ptr p) {
  ::CORBA::release(p);
}

void WaistNeck::NeckInterface_Helper::marshalObjRef(::WaistNeck::NeckInterface_ptr obj, cdrStream& s) {
  ::WaistNeck::NeckInterface::_marshalObjRef(obj, s);
}

WaistNeck::NeckInterface_ptr WaistNeck::NeckInterface_Helper::unmarshalObjRef(cdrStream& s) {
  return ::WaistNeck::NeckInterface::_unmarshalObjRef(s);
}

void WaistNeck::NeckInterface_Helper::duplicate(::WaistNeck::NeckInterface_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

WaistNeck::NeckInterface_ptr
WaistNeck::NeckInterface::_duplicate(::WaistNeck::NeckInterface_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

WaistNeck::NeckInterface_ptr
WaistNeck::NeckInterface::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


WaistNeck::NeckInterface_ptr
WaistNeck::NeckInterface::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

WaistNeck::NeckInterface_ptr
WaistNeck::NeckInterface::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_NeckInterface _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_NeckInterface* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_NeckInterface;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* WaistNeck::NeckInterface::_PD_repoId = "IDL:WaistNeck/NeckInterface:1.0";


WaistNeck::_objref_NeckInterface::~_objref_NeckInterface() {
  
}


WaistNeck::_objref_NeckInterface::_objref_NeckInterface(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::WaistNeck::NeckInterface::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
WaistNeck::_objref_NeckInterface::_ptrToObjRef(const char* id)
{
  if( id == ::WaistNeck::NeckInterface::_PD_repoId )
    return (::WaistNeck::NeckInterface_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::WaistNeck::NeckInterface::_PD_repoId) )
    return (::WaistNeck::NeckInterface_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cWaistNeck_mRETURN__ID_o_cWaistNeck_mNeckPos
class _0RL_cd_3165d707315ddf8a_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3165d707315ddf8a_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  WaistNeck::NeckPos_var arg_0;
  WaistNeck::RETURN_ID_var result;
};

void _0RL_cd_3165d707315ddf8a_00000000::marshalReturnedValues(cdrStream& _n)
{
  (const WaistNeck::RETURN_ID&) result >>= _n;
  (const WaistNeck::NeckPos&) arg_0 >>= _n;

}

void _0RL_cd_3165d707315ddf8a_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new WaistNeck::RETURN_ID;
  (WaistNeck::RETURN_ID&)result <<= _n;
  arg_0 = new WaistNeck::NeckPos;
  (WaistNeck::NeckPos&)arg_0 <<= _n;

}

const char* const _0RL_cd_3165d707315ddf8a_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_00000000* tcd = (_0RL_cd_3165d707315ddf8a_00000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->getFeedbackPosNeck(tcd->arg_0.out());


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::getFeedbackPosNeck(::WaistNeck::NeckPos_out pos)
{
  _0RL_cd_3165d707315ddf8a_00000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_10000000, "getFeedbackPosNeck", 19);


  _invoke(_call_desc);
  pos = _call_desc.arg_0._retn();
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cWaistNeck_mRETURN__ID_o_cWaistNeck_mManipInfo
class _0RL_cd_3165d707315ddf8a_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3165d707315ddf8a_20000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  WaistNeck::ManipInfo_var arg_0;
  WaistNeck::RETURN_ID_var result;
};

void _0RL_cd_3165d707315ddf8a_20000000::marshalReturnedValues(cdrStream& _n)
{
  (const WaistNeck::RETURN_ID&) result >>= _n;
  (const WaistNeck::ManipInfo&) arg_0 >>= _n;

}

void _0RL_cd_3165d707315ddf8a_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new WaistNeck::RETURN_ID;
  (WaistNeck::RETURN_ID&)result <<= _n;
  arg_0 = new WaistNeck::ManipInfo;
  (WaistNeck::ManipInfo&)arg_0 <<= _n;

}

const char* const _0RL_cd_3165d707315ddf8a_20000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_20000000* tcd = (_0RL_cd_3165d707315ddf8a_20000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->getNeckInfo(tcd->arg_0.out());


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::getNeckInfo(::WaistNeck::ManipInfo_out mInfo)
{
  _0RL_cd_3165d707315ddf8a_20000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_30000000, "getNeckInfo", 12);


  _invoke(_call_desc);
  mInfo = _call_desc.arg_0._retn();
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cWaistNeck_mRETURN__ID_o_cWaistNeck_mLimitSeq
class _0RL_cd_3165d707315ddf8a_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3165d707315ddf8a_40000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  WaistNeck::LimitSeq_var arg_0;
  WaistNeck::RETURN_ID_var result;
};

void _0RL_cd_3165d707315ddf8a_40000000::marshalReturnedValues(cdrStream& _n)
{
  (const WaistNeck::RETURN_ID&) result >>= _n;
  (const WaistNeck::LimitSeq&) arg_0 >>= _n;

}

void _0RL_cd_3165d707315ddf8a_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new WaistNeck::RETURN_ID;
  (WaistNeck::RETURN_ID&)result <<= _n;
  arg_0 = new WaistNeck::LimitSeq;
  (WaistNeck::LimitSeq&)arg_0 <<= _n;

}

const char* const _0RL_cd_3165d707315ddf8a_40000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_40000000* tcd = (_0RL_cd_3165d707315ddf8a_40000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->getSoftLimitNeck(tcd->arg_0.out());


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::getSoftLimitNeck(::WaistNeck::LimitSeq_out softLimit)
{
  _0RL_cd_3165d707315ddf8a_40000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_50000000, "getSoftLimitNeck", 17);


  _invoke(_call_desc);
  softLimit = _call_desc.arg_0._retn();
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cWaistNeck_mRETURN__ID_o_cunsigned_plong
class _0RL_cd_3165d707315ddf8a_60000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3165d707315ddf8a_60000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  WaistNeck::ULONG arg_0;
  WaistNeck::RETURN_ID_var result;
};

void _0RL_cd_3165d707315ddf8a_60000000::marshalReturnedValues(cdrStream& _n)
{
  (const WaistNeck::RETURN_ID&) result >>= _n;
  arg_0 >>= _n;

}

void _0RL_cd_3165d707315ddf8a_60000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new WaistNeck::RETURN_ID;
  (WaistNeck::RETURN_ID&)result <<= _n;
  (WaistNeck::ULONG&)arg_0 <<= _n;

}

const char* const _0RL_cd_3165d707315ddf8a_60000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_60000000* tcd = (_0RL_cd_3165d707315ddf8a_60000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->getState(tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::getState(::WaistNeck::ULONG& state)
{
  _0RL_cd_3165d707315ddf8a_60000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_70000000, "getState", 9);


  _invoke(_call_desc);
  state = _call_desc.arg_0;
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cWaistNeck_mRETURN__ID
class _0RL_cd_3165d707315ddf8a_80000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3165d707315ddf8a_80000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  WaistNeck::RETURN_ID_var result;
};

void _0RL_cd_3165d707315ddf8a_80000000::marshalReturnedValues(cdrStream& _n)
{
  (const WaistNeck::RETURN_ID&) result >>= _n;

}

void _0RL_cd_3165d707315ddf8a_80000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new WaistNeck::RETURN_ID;
  (WaistNeck::RETURN_ID&)result <<= _n;

}

const char* const _0RL_cd_3165d707315ddf8a_80000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_90000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_80000000* tcd = (_0RL_cd_3165d707315ddf8a_80000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->servoOFF();


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::servoOFF()
{
  _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_90000000, "servoOFF", 9);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_a0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_80000000* tcd = (_0RL_cd_3165d707315ddf8a_80000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->servoON();


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::servoON()
{
  _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_a0000000, "servoON", 8);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cWaistNeck_mRETURN__ID_i_cWaistNeck_mLimitSeq
class _0RL_cd_3165d707315ddf8a_b0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3165d707315ddf8a_b0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  WaistNeck::LimitSeq_var arg_0_;
  const WaistNeck::LimitSeq* arg_0;
  WaistNeck::RETURN_ID_var result;
};

void _0RL_cd_3165d707315ddf8a_b0000000::marshalArguments(cdrStream& _n)
{
  (const WaistNeck::LimitSeq&) *arg_0 >>= _n;

}

void _0RL_cd_3165d707315ddf8a_b0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new WaistNeck::LimitSeq;
  (WaistNeck::LimitSeq&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

void _0RL_cd_3165d707315ddf8a_b0000000::marshalReturnedValues(cdrStream& _n)
{
  (const WaistNeck::RETURN_ID&) result >>= _n;

}

void _0RL_cd_3165d707315ddf8a_b0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new WaistNeck::RETURN_ID;
  (WaistNeck::RETURN_ID&)result <<= _n;

}

const char* const _0RL_cd_3165d707315ddf8a_b0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_c0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_b0000000* tcd = (_0RL_cd_3165d707315ddf8a_b0000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->setSoftLimitNeck(*tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::setSoftLimitNeck(const ::WaistNeck::LimitSeq& softLimit)
{
  _0RL_cd_3165d707315ddf8a_b0000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_c0000000, "setSoftLimitNeck", 17);
  _call_desc.arg_0 = &(::WaistNeck::LimitSeq&) softLimit;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cWaistNeck_mRETURN__ID_o_cWaistNeck_mDoubleSeq
class _0RL_cd_3165d707315ddf8a_d0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3165d707315ddf8a_d0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  WaistNeck::DoubleSeq_var arg_0;
  WaistNeck::RETURN_ID_var result;
};

void _0RL_cd_3165d707315ddf8a_d0000000::marshalReturnedValues(cdrStream& _n)
{
  (const WaistNeck::RETURN_ID&) result >>= _n;
  (const WaistNeck::DoubleSeq&) arg_0 >>= _n;

}

void _0RL_cd_3165d707315ddf8a_d0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new WaistNeck::RETURN_ID;
  (WaistNeck::RETURN_ID&)result <<= _n;
  arg_0 = new WaistNeck::DoubleSeq;
  (WaistNeck::DoubleSeq&)arg_0 <<= _n;

}

const char* const _0RL_cd_3165d707315ddf8a_d0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_e0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_d0000000* tcd = (_0RL_cd_3165d707315ddf8a_d0000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->getMaxSpeedNeck(tcd->arg_0.out());


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::getMaxSpeedNeck(::WaistNeck::DoubleSeq_out speed)
{
  _0RL_cd_3165d707315ddf8a_d0000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_e0000000, "getMaxSpeedNeck", 16);


  _invoke(_call_desc);
  speed = _call_desc.arg_0._retn();
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cWaistNeck_mRETURN__ID_o_cdouble
class _0RL_cd_3165d707315ddf8a_f0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3165d707315ddf8a_f0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Double arg_0;
  WaistNeck::RETURN_ID_var result;
};

void _0RL_cd_3165d707315ddf8a_f0000000::marshalReturnedValues(cdrStream& _n)
{
  (const WaistNeck::RETURN_ID&) result >>= _n;
  arg_0 >>= _n;

}

void _0RL_cd_3165d707315ddf8a_f0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new WaistNeck::RETURN_ID;
  (WaistNeck::RETURN_ID&)result <<= _n;
  (::CORBA::Double&)arg_0 <<= _n;

}

const char* const _0RL_cd_3165d707315ddf8a_f0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_01000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_f0000000* tcd = (_0RL_cd_3165d707315ddf8a_f0000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->getMinAccelTimeNeck(tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::getMinAccelTimeNeck(::CORBA::Double& aclTime)
{
  _0RL_cd_3165d707315ddf8a_f0000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_01000000, "getMinAccelTimeNeck", 20);


  _invoke(_call_desc);
  aclTime = _call_desc.arg_0;
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cWaistNeck_mRETURN__ID_i_cWaistNeck_mNeckPos
class _0RL_cd_3165d707315ddf8a_11000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3165d707315ddf8a_11000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  WaistNeck::NeckPos_var arg_0_;
  const WaistNeck::NeckPos* arg_0;
  WaistNeck::RETURN_ID_var result;
};

void _0RL_cd_3165d707315ddf8a_11000000::marshalArguments(cdrStream& _n)
{
  (const WaistNeck::NeckPos&) *arg_0 >>= _n;

}

void _0RL_cd_3165d707315ddf8a_11000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new WaistNeck::NeckPos;
  (WaistNeck::NeckPos&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

void _0RL_cd_3165d707315ddf8a_11000000::marshalReturnedValues(cdrStream& _n)
{
  (const WaistNeck::RETURN_ID&) result >>= _n;

}

void _0RL_cd_3165d707315ddf8a_11000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new WaistNeck::RETURN_ID;
  (WaistNeck::RETURN_ID&)result <<= _n;

}

const char* const _0RL_cd_3165d707315ddf8a_11000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_21000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_11000000* tcd = (_0RL_cd_3165d707315ddf8a_11000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->movePTPNeckAbs(*tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::movePTPNeckAbs(const ::WaistNeck::NeckPos& neckPoints)
{
  _0RL_cd_3165d707315ddf8a_11000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_21000000, "movePTPNeckAbs", 15);
  _call_desc.arg_0 = &(::WaistNeck::NeckPos&) neckPoints;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_31000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_11000000* tcd = (_0RL_cd_3165d707315ddf8a_11000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->movePTPNeckRel(*tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::movePTPNeckRel(const ::WaistNeck::NeckPos& neckPoints)
{
  _0RL_cd_3165d707315ddf8a_11000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_31000000, "movePTPNeckRel", 15);
  _call_desc.arg_0 = &(::WaistNeck::NeckPos&) neckPoints;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_41000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_80000000* tcd = (_0RL_cd_3165d707315ddf8a_80000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->pause();


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::pause()
{
  _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_41000000, "pause", 6);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_51000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_80000000* tcd = (_0RL_cd_3165d707315ddf8a_80000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->resume();


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::resume()
{
  _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_51000000, "resume", 7);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_61000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_80000000* tcd = (_0RL_cd_3165d707315ddf8a_80000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->stop();


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::stop()
{
  _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_61000000, "stop", 5);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cWaistNeck_mRETURN__ID_i_cdouble
class _0RL_cd_3165d707315ddf8a_71000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3165d707315ddf8a_71000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Double arg_0;
  WaistNeck::RETURN_ID_var result;
};

void _0RL_cd_3165d707315ddf8a_71000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_3165d707315ddf8a_71000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Double&)arg_0 <<= _n;

}

void _0RL_cd_3165d707315ddf8a_71000000::marshalReturnedValues(cdrStream& _n)
{
  (const WaistNeck::RETURN_ID&) result >>= _n;

}

void _0RL_cd_3165d707315ddf8a_71000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new WaistNeck::RETURN_ID;
  (WaistNeck::RETURN_ID&)result <<= _n;

}

const char* const _0RL_cd_3165d707315ddf8a_71000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_81000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_71000000* tcd = (_0RL_cd_3165d707315ddf8a_71000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->setAccelTimeNeck(tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::setAccelTimeNeck(::CORBA::Double aclTime)
{
  _0RL_cd_3165d707315ddf8a_71000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_81000000, "setAccelTimeNeck", 17);
  _call_desc.arg_0 = aclTime;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cWaistNeck_mRETURN__ID_i_cWaistNeck_mDoubleSeq
class _0RL_cd_3165d707315ddf8a_91000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3165d707315ddf8a_91000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  WaistNeck::DoubleSeq_var arg_0_;
  const WaistNeck::DoubleSeq* arg_0;
  WaistNeck::RETURN_ID_var result;
};

void _0RL_cd_3165d707315ddf8a_91000000::marshalArguments(cdrStream& _n)
{
  (const WaistNeck::DoubleSeq&) *arg_0 >>= _n;

}

void _0RL_cd_3165d707315ddf8a_91000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new WaistNeck::DoubleSeq;
  (WaistNeck::DoubleSeq&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

void _0RL_cd_3165d707315ddf8a_91000000::marshalReturnedValues(cdrStream& _n)
{
  (const WaistNeck::RETURN_ID&) result >>= _n;

}

void _0RL_cd_3165d707315ddf8a_91000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new WaistNeck::RETURN_ID;
  (WaistNeck::RETURN_ID&)result <<= _n;

}

const char* const _0RL_cd_3165d707315ddf8a_91000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_a1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_91000000* tcd = (_0RL_cd_3165d707315ddf8a_91000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->setMaxSpeedNeck(*tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::setMaxSpeedNeck(const ::WaistNeck::DoubleSeq& speed)
{
  _0RL_cd_3165d707315ddf8a_91000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_a1000000, "setMaxSpeedNeck", 16);
  _call_desc.arg_0 = &(::WaistNeck::DoubleSeq&) speed;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_b1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_71000000* tcd = (_0RL_cd_3165d707315ddf8a_71000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->setMinAccelTimeNeck(tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::setMinAccelTimeNeck(::CORBA::Double aclTime)
{
  _0RL_cd_3165d707315ddf8a_71000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_b1000000, "setMinAccelTimeNeck", 20);
  _call_desc.arg_0 = aclTime;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cWaistNeck_mRETURN__ID_i_cunsigned_plong
class _0RL_cd_3165d707315ddf8a_c1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3165d707315ddf8a_c1000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  WaistNeck::ULONG arg_0;
  WaistNeck::RETURN_ID_var result;
};

void _0RL_cd_3165d707315ddf8a_c1000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_3165d707315ddf8a_c1000000::unmarshalArguments(cdrStream& _n)
{
  (WaistNeck::ULONG&)arg_0 <<= _n;

}

void _0RL_cd_3165d707315ddf8a_c1000000::marshalReturnedValues(cdrStream& _n)
{
  (const WaistNeck::RETURN_ID&) result >>= _n;

}

void _0RL_cd_3165d707315ddf8a_c1000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new WaistNeck::RETURN_ID;
  (WaistNeck::RETURN_ID&)result <<= _n;

}

const char* const _0RL_cd_3165d707315ddf8a_c1000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_d1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_c1000000* tcd = (_0RL_cd_3165d707315ddf8a_c1000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->setSpeedNeck(tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::setSpeedNeck(::WaistNeck::ULONG spdRatio)
{
  _0RL_cd_3165d707315ddf8a_c1000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_d1000000, "setSpeedNeck", 13);
  _call_desc.arg_0 = spdRatio;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_e1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_60000000* tcd = (_0RL_cd_3165d707315ddf8a_60000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->getSpeedNeck(tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::getSpeedNeck(::WaistNeck::ULONG& spdRatio)
{
  _0RL_cd_3165d707315ddf8a_60000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_e1000000, "getSpeedNeck", 13);


  _invoke(_call_desc);
  spdRatio = _call_desc.arg_0;
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_f1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_11000000* tcd = (_0RL_cd_3165d707315ddf8a_11000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->movePTPNeckAbsCmdCycle(*tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::movePTPNeckAbsCmdCycle(const ::WaistNeck::NeckPos& neckPoints)
{
  _0RL_cd_3165d707315ddf8a_11000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_f1000000, "movePTPNeckAbsCmdCycle", 23);
  _call_desc.arg_0 = &(::WaistNeck::NeckPos&) neckPoints;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_02000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_11000000* tcd = (_0RL_cd_3165d707315ddf8a_11000000*)cd;
  WaistNeck::_impl_NeckInterface* impl = (WaistNeck::_impl_NeckInterface*) svnt->_ptrToInterface(WaistNeck::NeckInterface::_PD_repoId);
  tcd->result = impl->movePTPNeckRelCmdCycle(*tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_NeckInterface::movePTPNeckRelCmdCycle(const ::WaistNeck::NeckPos& neckPoints)
{
  _0RL_cd_3165d707315ddf8a_11000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_02000000, "movePTPNeckRelCmdCycle", 23);
  _call_desc.arg_0 = &(::WaistNeck::NeckPos&) neckPoints;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
WaistNeck::_pof_NeckInterface::~_pof_NeckInterface() {}


omniObjRef*
WaistNeck::_pof_NeckInterface::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::WaistNeck::_objref_NeckInterface(ior, id);
}


::CORBA::Boolean
WaistNeck::_pof_NeckInterface::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::WaistNeck::NeckInterface::_PD_repoId) )
    return 1;
  
  return 0;
}

const WaistNeck::_pof_NeckInterface _the_pof_WaistNeck_mNeckInterface;

WaistNeck::_impl_NeckInterface::~_impl_NeckInterface() {}


::CORBA::Boolean
WaistNeck::_impl_NeckInterface::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "getFeedbackPosNeck") ) {

    _0RL_cd_3165d707315ddf8a_00000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_10000000, "getFeedbackPosNeck", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getNeckInfo") ) {

    _0RL_cd_3165d707315ddf8a_20000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_30000000, "getNeckInfo", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getSoftLimitNeck") ) {

    _0RL_cd_3165d707315ddf8a_40000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_50000000, "getSoftLimitNeck", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getState") ) {

    _0RL_cd_3165d707315ddf8a_60000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_70000000, "getState", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "servoOFF") ) {

    _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_90000000, "servoOFF", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "servoON") ) {

    _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_a0000000, "servoON", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setSoftLimitNeck") ) {

    _0RL_cd_3165d707315ddf8a_b0000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_c0000000, "setSoftLimitNeck", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getMaxSpeedNeck") ) {

    _0RL_cd_3165d707315ddf8a_d0000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_e0000000, "getMaxSpeedNeck", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getMinAccelTimeNeck") ) {

    _0RL_cd_3165d707315ddf8a_f0000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_01000000, "getMinAccelTimeNeck", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "movePTPNeckAbs") ) {

    _0RL_cd_3165d707315ddf8a_11000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_21000000, "movePTPNeckAbs", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "movePTPNeckRel") ) {

    _0RL_cd_3165d707315ddf8a_11000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_31000000, "movePTPNeckRel", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "pause") ) {

    _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_41000000, "pause", 6, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "resume") ) {

    _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_51000000, "resume", 7, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "stop") ) {

    _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_61000000, "stop", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setAccelTimeNeck") ) {

    _0RL_cd_3165d707315ddf8a_71000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_81000000, "setAccelTimeNeck", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setMaxSpeedNeck") ) {

    _0RL_cd_3165d707315ddf8a_91000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_a1000000, "setMaxSpeedNeck", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setMinAccelTimeNeck") ) {

    _0RL_cd_3165d707315ddf8a_71000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_b1000000, "setMinAccelTimeNeck", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setSpeedNeck") ) {

    _0RL_cd_3165d707315ddf8a_c1000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_d1000000, "setSpeedNeck", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getSpeedNeck") ) {

    _0RL_cd_3165d707315ddf8a_60000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_e1000000, "getSpeedNeck", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "movePTPNeckAbsCmdCycle") ) {

    _0RL_cd_3165d707315ddf8a_11000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_f1000000, "movePTPNeckAbsCmdCycle", 23, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "movePTPNeckRelCmdCycle") ) {

    _0RL_cd_3165d707315ddf8a_11000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_02000000, "movePTPNeckRelCmdCycle", 23, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
WaistNeck::_impl_NeckInterface::_ptrToInterface(const char* id)
{
  if( id == ::WaistNeck::NeckInterface::_PD_repoId )
    return (::WaistNeck::_impl_NeckInterface*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::WaistNeck::NeckInterface::_PD_repoId) )
    return (::WaistNeck::_impl_NeckInterface*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
WaistNeck::_impl_NeckInterface::_mostDerivedRepoId()
{
  return ::WaistNeck::NeckInterface::_PD_repoId;
}

WaistNeck::WaistInterface_ptr WaistNeck::WaistInterface_Helper::_nil() {
  return ::WaistNeck::WaistInterface::_nil();
}

::CORBA::Boolean WaistNeck::WaistInterface_Helper::is_nil(::WaistNeck::WaistInterface_ptr p) {
  return ::CORBA::is_nil(p);

}

void WaistNeck::WaistInterface_Helper::release(::WaistNeck::WaistInterface_ptr p) {
  ::CORBA::release(p);
}

void WaistNeck::WaistInterface_Helper::marshalObjRef(::WaistNeck::WaistInterface_ptr obj, cdrStream& s) {
  ::WaistNeck::WaistInterface::_marshalObjRef(obj, s);
}

WaistNeck::WaistInterface_ptr WaistNeck::WaistInterface_Helper::unmarshalObjRef(cdrStream& s) {
  return ::WaistNeck::WaistInterface::_unmarshalObjRef(s);
}

void WaistNeck::WaistInterface_Helper::duplicate(::WaistNeck::WaistInterface_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

WaistNeck::WaistInterface_ptr
WaistNeck::WaistInterface::_duplicate(::WaistNeck::WaistInterface_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

WaistNeck::WaistInterface_ptr
WaistNeck::WaistInterface::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


WaistNeck::WaistInterface_ptr
WaistNeck::WaistInterface::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

WaistNeck::WaistInterface_ptr
WaistNeck::WaistInterface::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_WaistInterface _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_WaistInterface* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_WaistInterface;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* WaistNeck::WaistInterface::_PD_repoId = "IDL:WaistNeck/WaistInterface:1.0";


WaistNeck::_objref_WaistInterface::~_objref_WaistInterface() {
  
}


WaistNeck::_objref_WaistInterface::_objref_WaistInterface(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::WaistNeck::WaistInterface::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
WaistNeck::_objref_WaistInterface::_ptrToObjRef(const char* id)
{
  if( id == ::WaistNeck::WaistInterface::_PD_repoId )
    return (::WaistNeck::WaistInterface_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::WaistNeck::WaistInterface::_PD_repoId) )
    return (::WaistNeck::WaistInterface_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cWaistNeck_mRETURN__ID_o_cWaistNeck_mWaistPos
class _0RL_cd_3165d707315ddf8a_12000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3165d707315ddf8a_12000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  WaistNeck::WaistPos_var arg_0;
  WaistNeck::RETURN_ID_var result;
};

void _0RL_cd_3165d707315ddf8a_12000000::marshalReturnedValues(cdrStream& _n)
{
  (const WaistNeck::RETURN_ID&) result >>= _n;
  (const WaistNeck::WaistPos&) arg_0 >>= _n;

}

void _0RL_cd_3165d707315ddf8a_12000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new WaistNeck::RETURN_ID;
  (WaistNeck::RETURN_ID&)result <<= _n;
  arg_0 = new WaistNeck::WaistPos;
  (WaistNeck::WaistPos&)arg_0 <<= _n;

}

const char* const _0RL_cd_3165d707315ddf8a_12000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_22000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_12000000* tcd = (_0RL_cd_3165d707315ddf8a_12000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->getFeedbackPosWaist(tcd->arg_0.out());


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::getFeedbackPosWaist(::WaistNeck::WaistPos_out pos)
{
  _0RL_cd_3165d707315ddf8a_12000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_22000000, "getFeedbackPosWaist", 20);


  _invoke(_call_desc);
  pos = _call_desc.arg_0._retn();
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_32000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_20000000* tcd = (_0RL_cd_3165d707315ddf8a_20000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->getWaistInfo(tcd->arg_0.out());


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::getWaistInfo(::WaistNeck::ManipInfo_out mInfo)
{
  _0RL_cd_3165d707315ddf8a_20000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_32000000, "getWaistInfo", 13);


  _invoke(_call_desc);
  mInfo = _call_desc.arg_0._retn();
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_42000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_40000000* tcd = (_0RL_cd_3165d707315ddf8a_40000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->getSoftLimitWaist(tcd->arg_0.out());


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::getSoftLimitWaist(::WaistNeck::LimitSeq_out softLimit)
{
  _0RL_cd_3165d707315ddf8a_40000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_42000000, "getSoftLimitWaist", 18);


  _invoke(_call_desc);
  softLimit = _call_desc.arg_0._retn();
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_52000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_60000000* tcd = (_0RL_cd_3165d707315ddf8a_60000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->getState(tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::getState(::WaistNeck::ULONG& state)
{
  _0RL_cd_3165d707315ddf8a_60000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_52000000, "getState", 9);


  _invoke(_call_desc);
  state = _call_desc.arg_0;
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_62000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_80000000* tcd = (_0RL_cd_3165d707315ddf8a_80000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->servoOFF();


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::servoOFF()
{
  _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_62000000, "servoOFF", 9);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_72000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_80000000* tcd = (_0RL_cd_3165d707315ddf8a_80000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->servoON();


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::servoON()
{
  _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_72000000, "servoON", 8);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_82000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_b0000000* tcd = (_0RL_cd_3165d707315ddf8a_b0000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->setSoftLimitWaist(*tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::setSoftLimitWaist(const ::WaistNeck::LimitSeq& softLimit)
{
  _0RL_cd_3165d707315ddf8a_b0000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_82000000, "setSoftLimitWaist", 18);
  _call_desc.arg_0 = &(::WaistNeck::LimitSeq&) softLimit;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_92000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_d0000000* tcd = (_0RL_cd_3165d707315ddf8a_d0000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->getMaxSpeedWaist(tcd->arg_0.out());


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::getMaxSpeedWaist(::WaistNeck::DoubleSeq_out speed)
{
  _0RL_cd_3165d707315ddf8a_d0000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_92000000, "getMaxSpeedWaist", 17);


  _invoke(_call_desc);
  speed = _call_desc.arg_0._retn();
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_a2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_f0000000* tcd = (_0RL_cd_3165d707315ddf8a_f0000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->getMinAccelTimeWaist(tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::getMinAccelTimeWaist(::CORBA::Double& aclTime)
{
  _0RL_cd_3165d707315ddf8a_f0000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_a2000000, "getMinAccelTimeWaist", 21);


  _invoke(_call_desc);
  aclTime = _call_desc.arg_0;
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cWaistNeck_mRETURN__ID_i_cWaistNeck_mWaistPos
class _0RL_cd_3165d707315ddf8a_b2000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3165d707315ddf8a_b2000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  WaistNeck::WaistPos_var arg_0_;
  const WaistNeck::WaistPos* arg_0;
  WaistNeck::RETURN_ID_var result;
};

void _0RL_cd_3165d707315ddf8a_b2000000::marshalArguments(cdrStream& _n)
{
  (const WaistNeck::WaistPos&) *arg_0 >>= _n;

}

void _0RL_cd_3165d707315ddf8a_b2000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new WaistNeck::WaistPos;
  (WaistNeck::WaistPos&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

void _0RL_cd_3165d707315ddf8a_b2000000::marshalReturnedValues(cdrStream& _n)
{
  (const WaistNeck::RETURN_ID&) result >>= _n;

}

void _0RL_cd_3165d707315ddf8a_b2000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new WaistNeck::RETURN_ID;
  (WaistNeck::RETURN_ID&)result <<= _n;

}

const char* const _0RL_cd_3165d707315ddf8a_b2000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_c2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_b2000000* tcd = (_0RL_cd_3165d707315ddf8a_b2000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->movePTPWaistAbs(*tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::movePTPWaistAbs(const ::WaistNeck::WaistPos& waistPoints)
{
  _0RL_cd_3165d707315ddf8a_b2000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_c2000000, "movePTPWaistAbs", 16);
  _call_desc.arg_0 = &(::WaistNeck::WaistPos&) waistPoints;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_d2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_b2000000* tcd = (_0RL_cd_3165d707315ddf8a_b2000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->movePTPWaistRel(*tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::movePTPWaistRel(const ::WaistNeck::WaistPos& waistPoints)
{
  _0RL_cd_3165d707315ddf8a_b2000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_d2000000, "movePTPWaistRel", 16);
  _call_desc.arg_0 = &(::WaistNeck::WaistPos&) waistPoints;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_e2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_80000000* tcd = (_0RL_cd_3165d707315ddf8a_80000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->pause();


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::pause()
{
  _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_e2000000, "pause", 6);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_f2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_80000000* tcd = (_0RL_cd_3165d707315ddf8a_80000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->resume();


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::resume()
{
  _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_f2000000, "resume", 7);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_03000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_80000000* tcd = (_0RL_cd_3165d707315ddf8a_80000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->stop();


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::stop()
{
  _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_03000000, "stop", 5);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_13000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_71000000* tcd = (_0RL_cd_3165d707315ddf8a_71000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->setAccelTimeWaist(tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::setAccelTimeWaist(::CORBA::Double aclTime)
{
  _0RL_cd_3165d707315ddf8a_71000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_13000000, "setAccelTimeWaist", 18);
  _call_desc.arg_0 = aclTime;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_23000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_91000000* tcd = (_0RL_cd_3165d707315ddf8a_91000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->setMaxSpeedWaist(*tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::setMaxSpeedWaist(const ::WaistNeck::DoubleSeq& speed)
{
  _0RL_cd_3165d707315ddf8a_91000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_23000000, "setMaxSpeedWaist", 17);
  _call_desc.arg_0 = &(::WaistNeck::DoubleSeq&) speed;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_33000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_71000000* tcd = (_0RL_cd_3165d707315ddf8a_71000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->setMinAccelTimeWaist(tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::setMinAccelTimeWaist(::CORBA::Double aclTime)
{
  _0RL_cd_3165d707315ddf8a_71000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_33000000, "setMinAccelTimeWaist", 21);
  _call_desc.arg_0 = aclTime;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_43000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_c1000000* tcd = (_0RL_cd_3165d707315ddf8a_c1000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->setSpeedWaist(tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::setSpeedWaist(::WaistNeck::ULONG spdRatio)
{
  _0RL_cd_3165d707315ddf8a_c1000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_43000000, "setSpeedWaist", 14);
  _call_desc.arg_0 = spdRatio;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_53000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_60000000* tcd = (_0RL_cd_3165d707315ddf8a_60000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->getSpeedWaist(tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::getSpeedWaist(::WaistNeck::ULONG& spdRatio)
{
  _0RL_cd_3165d707315ddf8a_60000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_53000000, "getSpeedWaist", 14);


  _invoke(_call_desc);
  spdRatio = _call_desc.arg_0;
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_63000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_b2000000* tcd = (_0RL_cd_3165d707315ddf8a_b2000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->movePTPWaistAbsCmdCycle(*tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::movePTPWaistAbsCmdCycle(const ::WaistNeck::WaistPos& waistPoints)
{
  _0RL_cd_3165d707315ddf8a_b2000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_63000000, "movePTPWaistAbsCmdCycle", 24);
  _call_desc.arg_0 = &(::WaistNeck::WaistPos&) waistPoints;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_3165d707315ddf8a_73000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3165d707315ddf8a_b2000000* tcd = (_0RL_cd_3165d707315ddf8a_b2000000*)cd;
  WaistNeck::_impl_WaistInterface* impl = (WaistNeck::_impl_WaistInterface*) svnt->_ptrToInterface(WaistNeck::WaistInterface::_PD_repoId);
  tcd->result = impl->movePTPWaistRelCmdCycle(*tcd->arg_0);


}

WaistNeck::RETURN_ID* WaistNeck::_objref_WaistInterface::movePTPWaistRelCmdCycle(const ::WaistNeck::WaistPos& waistPoints)
{
  _0RL_cd_3165d707315ddf8a_b2000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_73000000, "movePTPWaistRelCmdCycle", 24);
  _call_desc.arg_0 = &(::WaistNeck::WaistPos&) waistPoints;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
WaistNeck::_pof_WaistInterface::~_pof_WaistInterface() {}


omniObjRef*
WaistNeck::_pof_WaistInterface::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::WaistNeck::_objref_WaistInterface(ior, id);
}


::CORBA::Boolean
WaistNeck::_pof_WaistInterface::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::WaistNeck::WaistInterface::_PD_repoId) )
    return 1;
  
  return 0;
}

const WaistNeck::_pof_WaistInterface _the_pof_WaistNeck_mWaistInterface;

WaistNeck::_impl_WaistInterface::~_impl_WaistInterface() {}


::CORBA::Boolean
WaistNeck::_impl_WaistInterface::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "getFeedbackPosWaist") ) {

    _0RL_cd_3165d707315ddf8a_12000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_22000000, "getFeedbackPosWaist", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getWaistInfo") ) {

    _0RL_cd_3165d707315ddf8a_20000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_32000000, "getWaistInfo", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getSoftLimitWaist") ) {

    _0RL_cd_3165d707315ddf8a_40000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_42000000, "getSoftLimitWaist", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getState") ) {

    _0RL_cd_3165d707315ddf8a_60000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_52000000, "getState", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "servoOFF") ) {

    _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_62000000, "servoOFF", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "servoON") ) {

    _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_72000000, "servoON", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setSoftLimitWaist") ) {

    _0RL_cd_3165d707315ddf8a_b0000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_82000000, "setSoftLimitWaist", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getMaxSpeedWaist") ) {

    _0RL_cd_3165d707315ddf8a_d0000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_92000000, "getMaxSpeedWaist", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getMinAccelTimeWaist") ) {

    _0RL_cd_3165d707315ddf8a_f0000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_a2000000, "getMinAccelTimeWaist", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "movePTPWaistAbs") ) {

    _0RL_cd_3165d707315ddf8a_b2000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_c2000000, "movePTPWaistAbs", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "movePTPWaistRel") ) {

    _0RL_cd_3165d707315ddf8a_b2000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_d2000000, "movePTPWaistRel", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "pause") ) {

    _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_e2000000, "pause", 6, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "resume") ) {

    _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_f2000000, "resume", 7, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "stop") ) {

    _0RL_cd_3165d707315ddf8a_80000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_03000000, "stop", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setAccelTimeWaist") ) {

    _0RL_cd_3165d707315ddf8a_71000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_13000000, "setAccelTimeWaist", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setMaxSpeedWaist") ) {

    _0RL_cd_3165d707315ddf8a_91000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_23000000, "setMaxSpeedWaist", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setMinAccelTimeWaist") ) {

    _0RL_cd_3165d707315ddf8a_71000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_33000000, "setMinAccelTimeWaist", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setSpeedWaist") ) {

    _0RL_cd_3165d707315ddf8a_c1000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_43000000, "setSpeedWaist", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getSpeedWaist") ) {

    _0RL_cd_3165d707315ddf8a_60000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_53000000, "getSpeedWaist", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "movePTPWaistAbsCmdCycle") ) {

    _0RL_cd_3165d707315ddf8a_b2000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_63000000, "movePTPWaistAbsCmdCycle", 24, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "movePTPWaistRelCmdCycle") ) {

    _0RL_cd_3165d707315ddf8a_b2000000 _call_desc(_0RL_lcfn_3165d707315ddf8a_73000000, "movePTPWaistRelCmdCycle", 24, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
WaistNeck::_impl_WaistInterface::_ptrToInterface(const char* id)
{
  if( id == ::WaistNeck::WaistInterface::_PD_repoId )
    return (::WaistNeck::_impl_WaistInterface*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::WaistNeck::WaistInterface::_PD_repoId) )
    return (::WaistNeck::_impl_WaistInterface*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
WaistNeck::_impl_WaistInterface::_mostDerivedRepoId()
{
  return ::WaistNeck::WaistInterface::_PD_repoId;
}

POA_WaistNeck::NeckInterface::~NeckInterface() {}

POA_WaistNeck::WaistInterface::~WaistInterface() {}

